[{"D:\\charity-run\\src\\index.js":"1","D:\\charity-run\\src\\redux\\store\\index.js":"2","D:\\charity-run\\src\\redux\\reducers\\index.js":"3","D:\\charity-run\\src\\redux\\reducers\\runners.js":"4","D:\\charity-run\\src\\redux\\action-types\\index.js":"5","D:\\charity-run\\src\\components\\race-runners\\index.js":"6","D:\\charity-run\\src\\components\\table\\index.js":"7","D:\\charity-run\\src\\components\\form\\index.js":"8","D:\\charity-run\\src\\redux\\actions\\index.js":"9","D:\\charity-run\\src\\components\\button\\index.js":"10","D:\\charity-run\\src\\redux\\reducers\\form_fields.js":"11","D:\\charity-run\\src\\components\\modal\\index.js":"12","D:\\charity-run\\src\\components\\modal\\portal\\index.js":"13","D:\\charity-run\\src\\components\\pagination\\index.js":"14"},{"size":407,"mtime":1612116047094,"results":"15","hashOfConfig":"16"},{"size":210,"mtime":1609153368957,"results":"17","hashOfConfig":"16"},{"size":177,"mtime":1612111584625,"results":"18","hashOfConfig":"16"},{"size":929,"mtime":1609339362321,"results":"19","hashOfConfig":"16"},{"size":137,"mtime":1612111636933,"results":"20","hashOfConfig":"16"},{"size":2143,"mtime":1612764772634,"results":"21","hashOfConfig":"16"},{"size":975,"mtime":1612724185062,"results":"22","hashOfConfig":"16"},{"size":8804,"mtime":1612717931702,"results":"23","hashOfConfig":"16"},{"size":2042,"mtime":1612695503237,"results":"24","hashOfConfig":"16"},{"size":591,"mtime":1612765107933,"results":"25","hashOfConfig":"16"},{"size":243,"mtime":1612696515696,"results":"26","hashOfConfig":"16"},{"size":616,"mtime":1612112915143,"results":"27","hashOfConfig":"16"},{"size":682,"mtime":1612104362444,"results":"28","hashOfConfig":"16"},{"size":763,"mtime":1612765084933,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ajcb7p",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\charity-run\\src\\index.js",[],["65","66"],"D:\\charity-run\\src\\redux\\store\\index.js",[],"D:\\charity-run\\src\\redux\\reducers\\index.js",[],"D:\\charity-run\\src\\redux\\reducers\\runners.js",[],"D:\\charity-run\\src\\redux\\action-types\\index.js",[],"D:\\charity-run\\src\\components\\race-runners\\index.js",["67","68"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewField, addNewItem } from '../../redux/actions';\r\nimport { Button } from '../button';\r\nimport Table from '../table';\r\nimport Form from '../form';\r\nimport { Pagination } from '../pagination';\r\n\r\nconst RaceRunners = () => {\r\n    const runners = useSelector(state => state.runners);\r\n    const dispatch = useDispatch();\r\n\r\n    const [ showFormDialog, setShowFormDialog ] = useState(false);\r\n    const [ currentPage, setCurrentPage ] = useState(1);\r\n    const [ perPage ] = useState(10);\r\n    const [ currentItems, setCurrentItems ] = useState([]);\r\n\r\n    const handleShowFormDialog = show => {\r\n        setShowFormDialog(show)\r\n    }\r\n\r\n    const onSubmit = (item) => {\r\n        dispatch(addNewItem(runners, item));\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(addNewField(runners));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setCurrentItems(runners.slice(currentPage * perPage - perPage, currentPage * perPage))\r\n    }, [runners, currentPage])\r\n\r\n    const paginate = (event, page) => {\r\n        event.preventDefault();\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Table headers = {getHeaders(Object.keys(runners[0]))} \r\n                   items = {currentItems}\r\n                   />\r\n            <Form className={'race-app-form'}\r\n                  title={'Race app form'}\r\n                  index={0}\r\n                  show={showFormDialog}\r\n                  onClose={handleShowFormDialog}\r\n                  onSubmit={onSubmit}/>\r\n            <Button type={'add'} title={'Add new runner'} isOpen={handleShowFormDialog}/>\r\n            <Pagination itemsPerPage={perPage}\r\n                        totalItems={runners.length}\r\n                        paginate={paginate}\r\n                        currentPage={currentPage}/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst getHeaders = keys => {\r\n    keys.shift();\r\n    const headers = [];\r\n    keys.forEach(header => {\r\n        headers.push(header);\r\n    });\r\n    return headers;\r\n}\r\n\r\nexport default RaceRunners;","D:\\charity-run\\src\\components\\table\\index.js",[],"D:\\charity-run\\src\\components\\form\\index.js",["69","70","71","72","73"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions';\r\nimport { Button } from '../button';\r\nimport moment from 'moment';\r\nimport Modal from '../modal';\r\n\r\nimport './styles.scss';\r\n\r\nclass Form extends Component {\r\n\r\n    state = {\r\n        fields: [],\r\n        registration_date: '',\r\n        errors: [],\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if (prevProps.form_fields !== this.props.form_fields) {\r\n            this.setState({\r\n                fields: this.props.form_fields ? this.props.form_fields[this.props.index] : []\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        await this.setState({ errors: this.validate(), valid: false });\r\n        if (!this.state.errors.length && !this.state.valid) {\r\n            const { runners, onClose } = this.props;\r\n            const { fields, registration_date } = this.state;\r\n            const item = {};\r\n            for(let field of Object.values(fields)) {\r\n                Object.assign(item, field.name)\r\n            }\r\n            this.props.onSubmit({id: runners.length + 1, ...item, registration_date});\r\n            onClose(false);\r\n        }\r\n        else {\r\n            this.setState({\r\n                valid: true\r\n            })\r\n        }\r\n    }\r\n\r\n    autoCompleteField = now => {\r\n        this.setState({\r\n            registration_date: now\r\n        })\r\n    }\r\n\r\n    handleFieldChange = event => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let formField;\r\n        this.state.fields.map((field) => {\r\n            if (Object.keys(field.name).toString() === name) {\r\n                formField = field;\r\n            }\r\n        })\r\n        formField.name[name] = value;\r\n        if (name === 'date_of_birth') {\r\n            formField.name[name] = formField.name[name].split('-').reverse().join('.')\r\n            return formField\r\n        }\r\n        this.setState( prevState => { return {fields: prevState.fields},\r\n                                             {errors: prevState.errors\r\n                                             .filter(error => Object.keys(error)\r\n                                             .toString() !== name)} })\r\n    }\r\n\r\n    validate = () => {\r\n        const { fields } = this.state;\r\n        const errors = [];\r\n        fields.map(field => {\r\n            switch (Object.keys(field.name).toString()) {\r\n                case 'email':\r\n                    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n                    if (!re.test(Object.values(field.name).toString())) {\r\n                        errors.push({[Object.keys(field.name).toString()]: `incorrect email!`})\r\n                    }\r\n                    break;\r\n                case 'phone':\r\n                    const phone = /^\\+?[\\s\\-\\(\\)0-9]{7,19}$/;\r\n                    if (!phone.test(Object.values(field.name).toString())) {\r\n                        errors.push({[Object.keys(field.name).toString()]: `invalid phone number!`})\r\n                    }\r\n                    break;\r\n                case 'distance':\r\n                    if (+Object.values(field.name) < 0) {\r\n                        errors.push({[Object.keys(field.name).toString()]: `field can't be negative!`})\r\n                    }\r\n                    break;\r\n                case 'payment':\r\n                    if (+Object.values(field.name) < 0) {\r\n                        errors.push({[Object.keys(field.name).toString()]: `field can't be negative!`})\r\n                    }\r\n                    break;\r\n            \r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        const fields = this.state.fields;\r\n        const { onClose } = this.props;\r\n        return (\r\n            <form className={this.props.className && this.props.className} onSubmit={this.handleSubmit}>\r\n                <h3>\r\n                    <span className={'close'} onClick={() => onClose(false)}>&times;</span>\r\n                    {this.props.title}\r\n                </h3>\r\n                {fields.map((field, key) => {\r\n                    return <Field key={key} {...field} value={Object.values(field.name).toString()} errors={this.state.errors}\r\n                                  handleFieldChange={this.handleFieldChange} autoCompleteField={this.autoCompleteField}/>\r\n                })}\r\n                <Button title={'submit app form'} type={'submit'}/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nclass Field extends Component {\r\n    render() {\r\n        const {type, label, value, name, handleFieldChange, autoCompleteField, errors} = this.props;\r\n        let content;\r\n        switch (type) {\r\n            case 'date':\r\n                content = <Date type={type} name={Object.keys(name).toString()} handleFieldChange={handleFieldChange}/>\r\n                break;\r\n            case 'email':\r\n                content = <Email value={value} type={type} error={errors.find(er => Object.keys(er).toString() === Object.keys(name).toString())}\r\n                                 name={Object.keys(name).toString()} handleFieldChange={handleFieldChange}/>\r\n                break;\r\n            case 'phone':\r\n                content = <Phone value={value} error={errors.find(er => Object.keys(er).toString() === Object.keys(name).toString())}\r\n                                 name={Object.keys(name).toString()} handleFieldChange={handleFieldChange}/>\r\n                break;\r\n            case 'number':\r\n                content = <Number type={type} error={errors.find(er => Object.keys(er).toString() === Object.keys(name).toString())}\r\n                                  value={value} name={Object.keys(name).toString()} handleFieldChange={handleFieldChange}/>\r\n                break;\r\n            case 'disabled':\r\n                content = <Disabled name={Object.keys(name).toString()} handleFieldChange={autoCompleteField}/>\r\n                break;\r\n            case 'text':\r\n            default:\r\n                content = <Text type={type} value={value} name={Object.keys(name).toString()} handleFieldChange={handleFieldChange}/>\r\n                break;\r\n        }\r\n        return <>\r\n            <label>{label}</label>\r\n            {content}\r\n        </>\r\n    }\r\n}\r\n\r\nclass Date extends Component {\r\n    render() {\r\n        return <input required type={this.props.type} name={this.props.name} onChange={e => this.props.handleFieldChange(e)}/>\r\n    }\r\n}\r\n\r\nclass Text extends Component {\r\n    render() {\r\n        return <input required type={this.props.type} value={this.props.value} name={this.props.name} onChange={e => this.props.handleFieldChange(e)}/>\r\n    }\r\n}\r\n\r\nclass Email extends Component {\r\n    render() {\r\n        const { error, value, type, name, handleFieldChange } = this.props;\r\n        return <input required type={type} placeholder={error ? Object.values(error).toString() : ''} value={error ? '' : value} className={error ? 'error' : ''}\r\n                      name={name} onChange={e => handleFieldChange(e)}/>\r\n    }\r\n}\r\n\r\nclass Phone extends Component {\r\n    render() {\r\n        const { error, value, name, handleFieldChange } = this.props;\r\n        return <input required type={'text'} placeholder={error ? Object.values(error).toString() : ''} value={error ? '' : value} className={error ? 'error' : ''}\r\n                      name={name} onChange={e => handleFieldChange(e)}/>\r\n    }\r\n}\r\n\r\nclass Number extends Component {\r\n    render() {\r\n        const { error, value, name, handleFieldChange, type } = this.props;\r\n        return <input required type={type} placeholder={error ? Object.values(error).toString() : ''} value={error ? '' : value} className={error ? 'error' : ''}\r\n                      name={name} onChange={e => handleFieldChange(e)}/>\r\n    }\r\n}\r\n\r\nclass Disabled extends Component {\r\n    state = {\r\n        date: ''\r\n    }\r\n    tick = () => {\r\n        const date = moment().format('DD MMM YYYY, H:mm:ss');\r\n        this.setState({ date });\r\n    }\r\n    componentDidMount() {\r\n        this.clock = setInterval(() => this.tick(), 1000);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.date !== this.state.date) {\r\n            this.props.handleFieldChange(this.state.date.split(',').join(' '));\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.clock);\r\n    }\r\n    render() {\r\n        const date = this.state;\r\n        return <input required disabled value={Object.values(date)} name={this.props.name}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ runners, form_fields }) => {\r\n    return { runners, form_fields }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(Modal(Form));","D:\\charity-run\\src\\redux\\actions\\index.js",["74"],"import { ADD_NEW_FIELD, ADD_RUNNER, GET_FORM_FIELDS } from \"../action-types\";\r\n\r\nexport const addNewField = fields => {\r\n    return {\r\n        type: ADD_NEW_FIELD,\r\n        payload: addRegistrationDate(fields)\r\n    }\r\n}\r\n\r\nexport const addNewItem = ( items, item ) => {\r\n    return {\r\n        type: ADD_RUNNER,\r\n        payload: [ ...items, item ]\r\n    }\r\n}\r\n\r\nexport const getFormFields = () => {\r\n    return {\r\n        type: GET_FORM_FIELDS,\r\n        payload: dataFormFields\r\n    }\r\n}\r\n\r\nconst addRegistrationDate = items => {\r\n    return items.map(item => {\r\n        item = Object.fromEntries(Object.entries(item).map(([key, value]) => [key.replace(/date/, `${key} of birth`), value]).swap());\r\n        return {\r\n            ...item,\r\n            'registration date': new Date().toUTCString().slice(4,-4)\r\n        }\r\n    })\r\n}\r\n\r\nArray.prototype.swap = function() {\r\n    [this[1], this[2]] = [this[2], this[1]]\r\n    return this\r\n}\r\n\r\nconst dataFormFields = [\r\n    [\r\n        {\r\n            label: 'name',\r\n            type: 'text',\r\n            name: {\r\n                name: ''\r\n            }\r\n        },\r\n\r\n        {\r\n            label: 'date of birth',\r\n            type: 'date',\r\n            name: {\r\n                date_of_birth: ''\r\n            }\r\n        },\r\n\r\n        {\r\n            label: 'e-mail',\r\n            type: \"email\",\r\n            name: {\r\n                email: ''\r\n            }\r\n        },\r\n\r\n        {\r\n            label: 'phone',\r\n            type: 'phone',\r\n            name: {\r\n                phone: ''\r\n            }\r\n        },\r\n\r\n        {\r\n            label: 'distance',\r\n            type: 'number',\r\n            name: {\r\n                distance: \"\"\r\n            }\r\n        },\r\n\r\n        {\r\n            label: 'payment',\r\n            type: 'number',\r\n            name: {\r\n                payment: ''\r\n            }\r\n        },\r\n\r\n        {\r\n            label: 'registration date',\r\n            type: 'disabled',\r\n            name: {\r\n                registration_date: ''\r\n            }\r\n        }\r\n    ]\r\n]","D:\\charity-run\\src\\components\\button\\index.js",[],"D:\\charity-run\\src\\redux\\reducers\\form_fields.js",["75"],"import * as action_types from '../action-types';\r\n\r\nconst init_state = null;\r\n\r\nexport default (state = init_state, action) => {\r\n    if(action.type === action_types.GET_FORM_FIELDS) {\r\n        return action.payload\r\n    }\r\n    return state\r\n}","D:\\charity-run\\src\\components\\modal\\index.js",[],"D:\\charity-run\\src\\components\\modal\\portal\\index.js",["76"],"import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport default class Portal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.el = document.createElement('div');\r\n        this.main = document.getElementById('root');\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        document.body.appendChild(this.el);\r\n        this.main.classList.toggle('blur');\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        document.body.removeChild(this.el);\r\n        this.main.classList.toggle('blur');\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        return ReactDOM.createPortal(children, this.el);\r\n    }\r\n}",["77","78"],"D:\\charity-run\\src\\components\\pagination\\index.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":28,"column":8,"nodeType":"85","endLine":28,"endColumn":10,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":32,"column":8,"nodeType":"85","endLine":32,"endColumn":30,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":57,"column":39,"nodeType":"91","messageId":"92","endLine":57,"endColumn":41},{"ruleId":"93","severity":1,"message":"94","line":67,"column":72,"nodeType":"95","messageId":"96","endLine":67,"endColumn":73},{"ruleId":"89","severity":1,"message":"90","line":76,"column":26,"nodeType":"91","messageId":"92","endLine":76,"endColumn":28},{"ruleId":"97","severity":1,"message":"98","line":85,"column":45,"nodeType":"99","messageId":"100","endLine":85,"endColumn":46,"suggestions":"101"},{"ruleId":"97","severity":1,"message":"102","line":85,"column":47,"nodeType":"99","messageId":"100","endLine":85,"endColumn":48,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":34,"column":1,"nodeType":"106","messageId":"107","endLine":37,"endColumn":2},{"ruleId":"108","severity":1,"message":"109","line":5,"column":1,"nodeType":"110","endLine":10,"endColumn":2},{"ruleId":"111","severity":1,"message":"112","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"79","replacedBy":"115"},{"ruleId":"81","replacedBy":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'runners'. Either include them or remove the dependency array.","ArrayExpression",["119"],"React Hook useEffect has a missing dependency: 'perPage'. Either include it or remove the dependency array.",["120"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-useless-escape","Unnecessary escape character: \\(.","Literal","unnecessaryEscape",["121","122"],"Unnecessary escape character: \\).",["123","124"],"no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar",["117"],["118"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"messageId":"129","fix":"130","desc":"131"},{"messageId":"132","fix":"133","desc":"134"},{"messageId":"129","fix":"135","desc":"131"},{"messageId":"132","fix":"136","desc":"134"},"Update the dependencies array to be: [dispatch, runners]",{"range":"137","text":"138"},"Update the dependencies array to be: [runners, currentPage, perPage]",{"range":"139","text":"140"},"removeEscape",{"range":"141","text":"142"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"143","text":"144"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"145","text":"142"},{"range":"146","text":"144"},[928,930],"[dispatch, runners]",[1061,1083],"[runners, currentPage, perPage]",[2918,2919],"",[2918,2918],"\\",[2920,2921],[2920,2920]]